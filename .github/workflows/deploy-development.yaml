name: Deploy In DEV_ENV

on:
  push:
    branches:
      - feature/*

jobs:
  deploy-in-development:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 确保获取所有历史以便正确部署

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Dependencies
        run: yarn

      - name: Lint
        run: yarn lint

      - name: Build
        id: build-environment
        run: |
          ENV=development
          echo "Current environment setted as $ENV 🧪"
          echo "ENV=$ENV" >> $GITHUB_ENV

          CURRENT_BRANCH=${{ github.ref_name }}
          echo "Current branch is $CURRENT_BRANCH 🌿"

          # 暂不设置泳道 
          SWIMLANE=''
          # 所有开发使用主测试环境
          SUFFIX_URL=main

          # 设置打包输出路径
          OUT_DIR=$(grep 'REACT_BUILD_OUT_DIR' .env.$ENV | cut -d '=' -f2)/$SUFFIX_URL
          echo "OUT_DIR=$OUT_DIR" >> $GITHUB_ENV

          # 设置部署分支路径
          TARGET_FOLDER=$(grep 'REACT_DEV_URL_BASE' .env.$ENV | cut -d '=' -f2)/$SUFFIX_URL
          echo "TARGET_FOLDER=$TARGET_FOLDER" >> $GITHUB_ENV
          echo "部署分支路径为：$(grep 'REACT_DEV_URL_BASE' .env.$ENV | cut -d '=' -f2)/$SUFFIX_URL"

          echo "-------------------------------------------------------------"

          echo "当前环境为：开发环境，打包输出目录为：$OUT_DIR，部署分支路径为：$TARGET_FOLDER 🧪"

          echo "-------------------------------------------------------------"

          echo "📦 开始对 vite 项目打包..."

          yarn run build --mode $ENV

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages # 部署到 gh-pages 分支
          folder: ${{ env.OUT_DIR }} # 部署目录见配置
          target-folder: /${{ env.TARGET_FOLDER }} # 部署目录
          clean: true # 先清理之前的部署
          token: ${{ secrets.GITHUB_TOKEN }}

  publish-to-surge-page:
    runs-on: ubuntu-latest
    needs: deploy-in-development
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 确保获取所有历史以便正确部署

      - name: Fetch ENV_PARAMS
        run: |
          # 测试环境
          ENV=development

          # 获取app名字
          REACT_APP_NAME=$(grep 'REACT_APP_NAME' .env.$ENV | cut -d '=' -f2)
          echo "REACT_APP_NAME=$REACT_APP_NAME" >> $GITHUB_ENV

          # 获取部署的 surge 域名
          SURGE_DOMAIN=$(grep 'SURGE_DOMAIN' .env.$ENV | cut -d '=' -f2)
          echo "SURGE_DOMAIN=$SURGE_DOMAIN" >> $GITHUB_ENV

      - name: Switch to gh-pages branch
        run: git checkout gh-pages

      - name: install surge
        run: yarn global add surge
      
      - name: publish development pages
        env:
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }} # 2025-05-19过期
        run: |
          # 创建临时的temp/quick-man文件夹，保障suge域名下访问路径和github-pages一致
          mkdir -p ./temp/${{ env.REACT_APP_NAME }}

          # 复制所有打包文件到创建的文件夹下，保障不覆盖线上分支代码
          cp -r ./ ./temp/${{ env.REACT_APP_NAME }}

          # surge上传文件到 surge.sh 域名
          surge --project ./temp --domain ${{ env.SURGE_DOMAIN }}

          # 上传完成后删除临时的temp文件夹
          rm -rf ./temp





